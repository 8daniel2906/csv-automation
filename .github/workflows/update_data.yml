name: Automatische Datenaktualisierung

on:
  push:
  #schedule:
    #- cron: "0 */1 * * *"
  workflow_dispatch:  # Erlaubt manuelles Starten über GitHub UI

jobs:
  update-data:
    runs-on: ubuntu-latest  # Läuft auf einem Linux-Server von GitHub
    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Python einrichten
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Abhängigkeiten installieren
        run: |
          pip install requests pyyaml streamlit pandas matplotlib plotly tensorflow datetime scipy joblib scikit-learn==1.2.2 numpy==1.23.5 setuptools

      - name: streamlit updaten
        run: python app.py

      - name: Änderungen committen und pushen
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add requirements_api.txt requirements_cron.txt requirements.txt app.py osw_api_2_db.py db_2_excel.py Dockerfiles/Dockerfile.api Dockerfiles/Dockerfile.cron models/fnn.h5 models/kmeans_10cl_10timebin_180chunk_90%e_80%PI_750schwelle.pkl README.md
          git commit -m " Automatische Aktualisierung der Sensordaten" || echo "Keine Änderungen zum Commit"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/8daniel2906/csv-automation.git main

