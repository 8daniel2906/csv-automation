name: Automatische Datenaktualisierung

on:
  schedule:
    - cron: "0 */4 * * *"  # Alle 5 Minuten ausfÃ¼hren
  workflow_dispatch:  # Erlaubt manuelles Starten Ã¼ber GitHub UI

jobs:
  update-data:
    runs-on: ubuntu-latest  # LÃ¤uft auf einem Linux-Server von GitHub
    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Python einrichten
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: AbhÃ¤ngigkeiten installieren
        run: |
          pip install requests pyyaml streamlit pandas matplotlib plotly tensorflow datetime

      - name: Alte JSON- , .npy- und CSV-Dateien lÃ¶schen
        run: |
          rm -f sensor_data.json sensor_data.csv historic_data.npy historic_predictions.npy error.npy mean_error.npy max_global_error.npy timestamps.npy input.npy live_prediction.npy

      - name: API-Daten abrufen
        run: python api.py

      - name: JSON in CSV konvertieren
        run: python 2_csv.py

      - name: vorhersage berechnen
        run: python csv_2_numpy.py

      - name: streamlit updaten
        run: python app.py

      - name: Ã„nderungen committen und pushen
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add sensor_data.json sensor_data.csv historic_data.npy historic_predictions.npy error.npy mean_error.npy max_global_error.npy timestamps.npy input.npy live_prediction.npy
          git commit -m "ðŸ”„ Automatische Aktualisierung der Sensordaten" || echo "Keine Ã„nderungen zum Commit"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/8daniel2906/csv-automation.git main

